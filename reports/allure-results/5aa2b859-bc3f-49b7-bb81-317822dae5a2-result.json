{"name": "test_create_order", "status": "broken", "statusDetails": {"message": "TypeError: 'Response' object is not subscriptable", "trace": "client = <utils.request_handler.RequestHandler object at 0x1072413c0>\n\n    @pytest.mark.api\n    def test_create_order(client):\n        payload = {'orders': [{'country': \"India\", 'productOrderedId': \"68a961459320a140fe1ca57a\"}]}\n    \n        order_response = client.post('/api/ecom/order/create-order', json=payload)\n        assert order_response.status_code == 201\n    \n        assert order_response.json()['message'] == \"Order Placed Successfully\"\n    \n        order_id = order_response.json()['orders'][0]\n    \n        order_details = client.get('/api/ecom/order/get-orders-details', params={'id': order_id})\n    \n        assert order_details.status_code == 200\n    \n>       assert order_details['data']['_id'] == order_id\nE       TypeError: 'Response' object is not subscriptable\n\ntests/test_order.py:19: TypeError"}, "start": 1757472450234, "stop": 1757472450306, "uuid": "ef989a50-f698-44fd-a756-244347936113", "historyId": "346ab6b422ab754aec3e1636d62e9be3", "testCaseId": "346ab6b422ab754aec3e1636d62e9be3", "fullName": "tests.test_order#test_create_order", "labels": [{"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "host", "value": "Nandeeshs-MacBook-Pro.local"}, {"name": "thread", "value": "9745-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}